# Welcome to GraphiQL
#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that start
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)
#
#       Run Query:  Ctrl-Enter (or press the play button above)
#
#   Auto Complete:  Ctrl-Space (or just start typing)
#
query{
 _dcc_PageByPath (_path:"/content/dam/diriyah/content-fragments/diriyah-company/ar/page-fragments/dco-home-page") {
 item {
  pageType
  metadata{
    ... on _dcc_PageMetadataModel{
      title
      description
      keywords
      canonical
      twitterCard
      twitterSite
      openGraphUrl
      openGraphType
      openGraphImage{
        ... on ImageRef{
          _authorUrl
          _publishUrl
          width
          height
          mimeType
          type
        }
      }
    }
  }
  header{
    heroLogo{
        ... on ImageRef{
          _authorUrl
          _publishUrl
          mimeType
        }
      }
    stickyLogo{
        ... on ImageRef{
          _authorUrl
          _publishUrl
          mimeType
        }
      }
    logoAltText
    rootPathName
    language
    mainMenu{
     ... on _dco_NavigationMenuItemModel{
      mobileLabel
      label
      link
      urlTarget
      childNavigationItems{
        ... on _dcc_CtaModel{
          label
          type
          target
          link
        }       
      }
    }
    }
  }
  sections{
    ... on _dcc_SpotlightComponentModel {
      type
      spotlightImageDesktop{
        ... on ImageRef{
          _authorUrl
          _publishUrl
          mimeType
        }
      }
      spotlightImageMobile{
        ... on ImageRef{
          _authorUrl
          _publishUrl
          mimeType
        }
      }
     videoUrl
     videoUrlMobile
    titleText
    descriptionText
    cta{
      ... on _dcc_CtaModel{
      type
      label
      target
      link
      }   
    }
    }   
  }
  path
  publishedOn
  expireOn
  redirectTo
  language
  footer{
    language
    footerCopyrightText
    navigationList{
     ... on _dco_NavigationMenuItemModel{
      mobileLabel
      label
      link
      urlTarget
      childNavigationItems{
        ... on _dcc_CtaModel{
          label
          type
          target
          link
        }       
      }
    }
    }
  }
  }}}
 